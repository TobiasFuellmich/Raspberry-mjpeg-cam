#!/usr/bin/env python

import asyncio
import websockets
from time import sleep
from os import stat

async def hello(websocket, path):
	pw = await websocket.recv()
	running=True
	last_time=0
	send_frames=12
	if(pw == "fgsdgdgh+456zh54tgh6!2dde#"):
		while True:
			path ="/var/www/html/vid_stream/last_m_jpeg_info.lock"
			mtime=stat(path).st_mtime
			if (mtime!=last_time):
				files=open("/var/www/html/vid_stream/last_m_jpeg_info.lock")
				info=files.read()# frame number/time used for frames
				files.close
				if (len(info)==88):
					last_time=mtime
					info_split= info.split("/")
					info=str(send_frames).zfill(4)+info[4:]
					frame_data=b""
					for i in range(int(info_split[0])-12,int(info_split[0])):
						path ='/var/www/html/vid_stream/vid_parts/frame'+str(i).zfill(3)+".jpg"
						size=stat(path).st_size
						info+="/"+str(size).zfill(5)
						files=open(path,"rb")
						frame_data+=files.read()
						files.close()
			try:
				if(len(info)<120):
					await websocket.send("no data")
					print("no data")
				else:
					await websocket.send(info.encode()+frame_data)
					print(info)
				
			except websockets.ConnectionClosed:
				break
			
			info=""
			sleep(0.05)
		print("<> closed")

start_server = websockets.serve(hello, '127.0.0.1', 7216, timeout=10)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()


